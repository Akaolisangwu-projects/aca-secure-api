name: ci-build-and-scan
on:
  push: { branches: [ main ] }
  pull_request:
jobs:
  build_scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Set vars
        id: vars
        run: |
          echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          echo "IMAGE=ghcr.io/${{ github.repository }}/aca-secure-api:${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          echo "LATEST=ghcr.io/${{ github.repository }}/aca-secure-api:latest" >> $GITHUB_OUTPUT
      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.vars.outputs.IMAGE }}
            ${{ steps.vars.outputs.LATEST }}
          platforms: linux/amd64,linux/arm64
      - name: Setup Node
        uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Install Snyk
        run: npm i -g snyk
      - name: Snyk auth
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
      - name: Snyk Open Source
        working-directory: api
        run: snyk test --severity-threshold=medium --print-deps --json-file-output=../snyk-sca.json
      - name: Snyk Code
        working-directory: api
        run: snyk code test --severity-threshold=medium --json-file-output=../snyk-code.json
      - name: Snyk Container
        run: snyk container test ${{ steps.vars.outputs.IMAGE }} --severity-threshold=medium --json-file-output=snyk-container.json
      - name: Snyk IaC
        run: snyk iac test infra --severity-threshold=medium --json-file-output=snyk-iac.json
      - name: SBOM (source)
        working-directory: api
        run: snyk sbom --format=cyclonedx1.5+json --output=../sbom-source.json
      - name: SBOM (container)
        run: snyk container sbom ${{ steps.vars.outputs.IMAGE }} --format=cyclonedx1.5+json --output=sbom-image.json
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-artifacts
          path: |
            sbom-*.json
            snyk-*.json
